version: 2

# The following stanza defines a map named defaults with a variable that may be
# inserted using the YAML merge (<<: *) key later in the file to save some
# typing. See http://yaml.org/type/merge.html for details.
defaults: &defaults
  environment:
    CI_SCRIPTS: 'npx --quiet --package @reactioncommerce/ci-scripts@1.6.2'
    DOCKER_REPOSITORY: "loginsolutions/reaction-identity-lulis"
    DOCKER_NAMESPACE: "loginsolutions"
    DOCKER_NAME: "reaction-identity-lulis"
  docker:
    - image: circleci/node:12.16.1-stretch
only-deploy-trunk: &only-deploy-trunk
  filters:
    branches:
      only:
        - trunk

jobs:
  install-dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - reaction-v3-node-modules-{{ .Branch }}
      - run:
          name: Install NPM dependencies
          command: npm install
      - save_cache:
          key: reaction-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - save_cache:
          key: reaction-v3-node-modules-{{ .Branch }}
          paths:
            - node_modules

  dockerfile-lint:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Lint Dockerfiles
          command: ${CI_SCRIPTS} lint-dockerfiles

  eslint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - reaction-v3-node-modules-{{ .Branch }}
      - run:
          name: Lint JavaScript
          command: npm run lint

  docker-build-push:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
          version: 19.03.13
      - run:
          name: Build and push production Docker image
          command: |
            VERSION=$(git describe --tags `git rev-list --tags --max-count=1` | cut -c2-100)
            docker build -t ${DOCKER_REPOSITORY}:production . --network host
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker push ${DOCKER_REPOSITORY}:production

workflows:
  version: 2
  build_and_test:
    jobs:
      - install-dependencies
      # - dockerfile-lint:
      #     requires:
      #       - install-dependencies
      - eslint:
          requires:
            - install-dependencies
      - docker-build-push:
          context: reaction-lulis-publish-docker
          <<: *only-deploy-trunk
          # requires:
          #   - dockerfile-lint
          #   - eslint
